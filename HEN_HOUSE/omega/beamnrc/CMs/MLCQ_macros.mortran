%C80
"#############################################################################"
"                                                                             "
"  EGSnrc BEAMnrc component module macros: multi-leaf collimator              "
"  Copyright (C) 2015 National Research Council Canada                        "
"                                                                             "
"  This file is part of EGSnrc.                                               "
"                                                                             "
"  EGSnrc is free software: you can redistribute it and/or modify it under    "
"  the terms of the GNU Affero General Public License as published by the     "
"  Free Software Foundation, either version 3 of the License, or (at your     "
"  option) any later version.                                                 "
"                                                                             "
"  EGSnrc is distributed in the hope that it will be useful, but WITHOUT ANY  "
"  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS  "
"  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for   "
"  more details.                                                              "
"                                                                             "
"  You should have received a copy of the GNU Affero General Public License   "
"  along with EGSnrc. If not, see <http://www.gnu.org/licenses/>.             "
"                                                                             "
"#############################################################################"
"                                                                             "
"  Authors:         Hugo Palmans, 1998                                        "
"                   Kristiaan De Vlamynck, 1998                               "
"                                                                             "
"  Contributors:    Guang Fang                                                "
"                   Blake Walters                                             "
"                   Iwan Kawrakow                                             "
"                                                                             "
"#############################################################################"
"                                                                             "
"  This component module was originally derived from existing BEAM MLC        "
"  component modules, and contributed back to NRC by the authors. The final   "
"  version was extensively reworked by Blake Walters at NRC.                  "
"                                                                             "
"  The contributors named above are only those who could be identified from   "
"  this file's revision history.                                              "
"                                                                             "
"  This code is part of the BEAMnrc code system for Monte Carlo simulation of "
"  radiotherapy treatments units. BEAM was originally developed at the        "
"  National Research Council of Canada as part of the OMEGA collaborative     "
"  research project with the University of Wisconsin, and was originally      "
"  described in:                                                              "
"                                                                             "
"  BEAM: A Monte Carlo code to simulate radiotherapy treatment units,         "
"  DWO Rogers, BA Faddegon, GX Ding, C-M Ma, J Wei and TR Mackie,             "
"  Medical Physics 22, 503-524 (1995).                                        "
"                                                                             "
"  BEAM User Manual                                                           "
"  DWO Rogers, C-M Ma, B Walters, GX Ding, D Sheikh-Bagheri and G Zhang,      "
"  NRC Report PIRS-509A (rev D)                                               "
"                                                                             "
"  As well as the authors of this paper and report, Joanne Treurniet of NRC   "
"  made significant contributions to the code system, in particular the GUIs  "
"  and EGS_Windows. Mark Holmes, Brian Geiser and Paul Reckwerdt of Wisconsin "
"  played important roles in the overall OMEGA project within which the BEAM  "
"  code system was developed.                                                 "
"                                                                             "
"  There have been major upgrades in the BEAM code starting in 2000 which     "
"  have been heavily supported by Iwan Kawrakow, most notably: the port to    "
"  EGSnrc, the inclusion of history-by-history statistics and the development "
"  of the directional bremsstrahlung splitting variance reduction technique.  "
"                                                                             "
"#############################################################################"


"     This version has Guang Fang (UW) corrections/updates
"-------------------------------------------------------------------------------
"     MLC miscellaneous replacement macros
"-------------------------------------------------------------------------------
"
REPLACE {$MAX_N_$MLCQ} WITH {{REDUCE $MAXIMUM_N_$MLCQ}}
"       ==========="

REPLACE {$MAXIMUM_N_$MLCQ} WITH {3}
"       ==================="

" THE MAX # OF the leaves TO BE ALLOWED IN THIS MODULE"
REPLACE {$MAXLEAF} WITH {120}

"-------------------------------------------------------------------------------
"     MLC component module common
"-------------------------------------------------------------------------------
"
"V>COMMON/CM_$MLCQ/
"V>================
"V>ICM_$MLCQ        = index of CM, set as ICM in INPUT_$MLCQ, never re-set
"V>IRSTART_$MLCQ    = first region number for this CM
"V>IREND_$MLCQ      = last region number for this CM
"V>N_$MLCQ          = number of regions in CM
"V>TITLE_$MLCQ      = title of CM
"V>ZMIN_$MLCQ       = Front of MLC
"V>ZMAX_$MLCQ       = back of MLC
"V>ZFRONT_$MLCQ     = Upstream Z boundary of this CM
"V>NUM_LEAF_$MLCQ   = the number of leave in this module
"V>IDMLFC_$MLCQ      = the index to indicate the leave direction
"V>                  0: default, leave direction in y
"V>                  1:                          in x
"V>ZFOCUS_$MLCQ(2) = the two focus point coordinates: 1. for leave side
"V>                                                  2. for leave end.
"V>UP_COORD1_$MLCQ(2,$MAXLEAF/2)   coordinates of the leaf perpendicular
"V>DOWN_COORD1_$MLCQ(2,$MAXLEAF/2) to leaf direction, positvie and negative
"V>                               side symmetry.
"V>SURPARA1_$MLCQ(2,$MAXLEAF/2,4)  the parameters to describe the leaf side
"V>                               surface.
"V>R0LEAF,Z0LEAF radius and Zi_centre of cyl leaf-end for all leafs
"V>UP_COORD2_P_$MLCQ(2,$MAXLEAF/2) the coordinates of the leaf
"V>                               parallel to the leaf
"V>DOWN_COORD2_P_$MLCQ(2,$MAXLEAF/2) direction, 1: negative side
"V>                                            2: positive side
"V>XYL0LEAF_P_$MLCQ(2,$MAXLEAF/2) X or Y of centre cyl leaf-end surface
"V>UP_COORD2_N_$MLCQ(2,$MAXLEAF/2) the coordinates of the leaf
"V>                               parallel to the leaf
"V>DOWN_COORD2_N_$MLCQ(2,$MAXLEAF/2) direction, 1: negative side
"V>                                            2: positive side
"V>XYL0LEAF_N_$MLCQ(2,$MAXLEAF/2) X or Y of centre cyl leaf-end surface
"V>LEAF_OPEN_$MLCQ(2)              to indicate the leaf open siturations
"V>TWIDTH_$MLCQ                    total width of leaves
"V>IR_$MLCQ          local region number

;
REPLACE{;COMIN/CM_$MLCQ/;} WITH {
;COMMON/CM_$MLCQ/
      ZMIN_$MLCQ,
      ZMAX_$MLCQ,
      ZFRONT_$MLCQ,
      ZFOCUS_$MLCQ,
      R0LEAF_$MLCQ,
      Z0LEAF_$MLCQ,
      UP_COORD1_$MLCQ,
      DOWN_COORD1_$MLCQ,
      SURPARA1_$MLCQ,
      UP_COORD2_P_$MLCQ,
      DOWN_COORD2_P_$MLCQ,
      XYL0LEAF_P_$MLCQ,
      UP_COORD2_N_$MLCQ,
      DOWN_COORD2_N_$MLCQ,
      XYL0LEAF_N_$MLCQ,
      TWIDTH_$MLCQ,
      ICM_$MLCQ,IRSTART_$MLCQ,IREND_$MLCQ,N_$MLCQ,N_GAP_$MLCQ,
      IR_$MLCQ,
      NUM_LEAF_$MLCQ, IDMLFC_$MLCQ, OPEN_IND_$MLCQ,
      LEAF_OPEN_$MLCQ,
      TITLE_$MLCQ;
   $REAL
      ZMIN_$MLCQ,
      ZMAX_$MLCQ,
      ZFRONT_$MLCQ,
      ZFOCUS_$MLCQ(2),
      R0LEAF_$MLCQ,
      Z0LEAF_$MLCQ,
      UP_COORD1_$MLCQ(2,$MAXLEAF/2+1),
      DOWN_COORD1_$MLCQ(2,$MAXLEAF/2+1),
      SURPARA1_$MLCQ(2,$MAXLEAF/2+1,4),
      UP_COORD2_P_$MLCQ(2,$MAXLEAF/2+1),
      DOWN_COORD2_P_$MLCQ(2,$MAXLEAF/2+1),
      XYL0LEAF_P_$MLCQ(2,$MAXLEAF/2+1),
      UP_COORD2_N_$MLCQ(2,$MAXLEAF/2+1),
      DOWN_COORD2_N_$MLCQ(2,$MAXLEAF/2+1),
      XYL0LEAF_N_$MLCQ(2,$MAXLEAF/2+1),
      TWIDTH_$MLCQ;
   INTEGER
      ICM_$MLCQ,IRSTART_$MLCQ,IREND_$MLCQ,N_$MLCQ,N_GAP_$MLCQ,
      IR_$MLCQ,
      NUM_LEAF_$MLCQ, IDMLFC_$MLCQ, OPEN_IND_$MLCQ(2,$MAXLEAF/2+1),
      LEAF_OPEN_$MLCQ(2);
   CHARACTER*1 TITLE_$MLCQ(60);

}
 "end of replacement defining common for this CM"
;
" $UP_DOWN_REGION_ALLOCATION(UP,IR_$TAG, 0.0);
"=======================================
" this macro is used to determine the regon #
"{p1}: the interesting up or down xy plane surface
"{p2}: the return region value, local region
"{p3}: the step dist which is used to calc. the particle final position
REPLACE {$MLCQ_UP_DOWN_REGION_ALLOCATION(#,#,#);} WITH {;
    XYFL(1)=XYL(1)+{P3}*UVL(1);
    XYFL(2)=XYL(2)+{P3}*UVL(2);
    ZFL=Z(NP)+{P3}*W(NP);
    IF(XYFL(1)>=0.0)
    [ J_$MLCQ=2;]
    ELSE[J_$MLCQ=1;]
    DO I=1, LEAF_OPEN_$MLCQ(J_$MLCQ)
    [
       TEMP=XYFL(1)-SURPARA1_$MLCQ(J_$MLCQ,I,4)*(ZFL-ZFOCUS_$MLCQ(1));
       IF(  (TEMP<=0.0 & J_$MLCQ=2)
          | (TEMP>=0.0 & J_$MLCQ=1) )[ EXIT;]
    ]
    IF(   XYFL(2)<{P1}_COORD2_P_$MLCQ(J_$MLCQ,I)
       &  XYFL(2)>{P1}_COORD2_N_$MLCQ(J_$MLCQ,I) )
    [{P2}=1;]
    ELSE[{P2}=2;]
;}

;
REPLACE {$MLCQ_CM_HOWNEAR(#);} WITH {
CALL HOWNEAR_$MLCQ({P1});
}
;

REPLACE {$MLCQ_REGION_RESET_WARNNING_MACRO(#);} WITH {
    IRNEW=IRSTART_$MLCQ+{P1};
    USTEP=MIN(USTEP,1.0E-5);
    IF(X(NP)+Y(NP)+Z(NP)=TEMPOLD) [
        COUNT1=COUNT1+1;
        IF(COUNT1=20) [
           OUTPUT X(NP), Y(NP), Z(NP), U(NP), V(NP), W(NP), E(NP),
                IQ(NP), IR(NP), I;
           (' THE PARTICLE INTENDS TO THE INFINITE LOOP in MLC cm,',
           ' TO BE forced to move the step 1.0e-5 !!',
                7F15.8, 3I4 );
           OUTPUT IR_$MLCQ,I; (2I4);
           COUNT1=0;
           USTEP=0.;
           IDISC=1; OUTPUT; ( ' THE PARTICLE  WILL BE DISCARDED!!!');
           RETURN;
        ]
    ]
    ELSE[COUNT1=0;]
    TEMPOLD=X(NP)+Y(NP)+Z(NP);
    RETURN;
}
;
"End of MLC_macros.mortran"
