%C80
"#############################################################################"
"                                                                             "
"  EGSnrc tutor3 application                                                  "
"  Copyright (C) 2015 National Research Council Canada                        "
"                                                                             "
"  This file is part of EGSnrc.                                               "
"                                                                             "
"  EGSnrc is free software: you can redistribute it and/or modify it under    "
"  the terms of the GNU Affero General Public License as published by the     "
"  Free Software Foundation, either version 3 of the License, or (at your     "
"  option) any later version.                                                 "
"                                                                             "
"  EGSnrc is distributed in the hope that it will be useful, but WITHOUT ANY  "
"  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS  "
"  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for   "
"  more details.                                                              "
"                                                                             "
"  You should have received a copy of the GNU Affero General Public License   "
"  along with EGSnrc. If not, see <http://www.gnu.org/licenses/>.             "
"                                                                             "
"#############################################################################"
"                                                                             "
"  Author:          Dave Roger, 1985                                          "
"                                                                             "
"  Contributors:    Iwan Kawrakow                                             "
"                   Reid Townson                                              "
"                                                                             "
"#############################################################################"
"                                                                             "
"  An EGSnrc user code which calcualtes the response function for a 2.54 cm   "
"  thick slab of NaI when a 5 MeV beam of photons is incident on it. In other "
"  words, computes the fraction of histories which deposit a certain amount   "
"  of energy in the slab.                                                     "
"                                                                             "
"  Iwan Kawrakow, 2003: Adapted to new EGSnrc MP system by adding call        "
"  egs_init at the beginning and call egs_finish at the end.                  "
"                                                                             "
"#############################################################################"


%L
%E
!INDENT M 4;    "indent each MORTRAN nesting level by 4"
!INDENT F 2;    "indent each FORTRAN nesting level by 2"
$IMPLICIT-NONE;
$INTEGER I,J,IQIN,IRIN,NCASE,IBIN,ICOL;
$REAL XIN,YIN,ZIN,EIN,WTIN,UIN,VIN,WIN,BWIDTH,BINMAX;
CHARACTER*1 LINE(48); "for output plot"
"---------------------------------------------------------------------"
"STEP 1:  USER-OVERRIDE-OF-EGSnrc-MACROS                              "
"---------------------------------------------------------------------"
REPLACE {$MXMED} WITH {1}   "only 1 medium in the problem(default 10)"
REPLACE {$MXREG} WITH {3}   "only 3 geometric regions (default 2000)"
REPLACE {$MXSTACK} WITH {15}"less than 15 particles on stack at once"
REPLACE {$EBIN} WITH {25}   "user parameter -# bins in energy spectrum"

"Define a common to pass information to the geometry routine HOWFAR"
REPLACE {;COMIN/GEOM/;} WITH {;COMMON/GEOM/ZBOUND;$REAL ZBOUND;}
REPLACE {$CALL-HOWNEAR(#);} WITH {
   ;CALL HOWNEAR({P1},X(NP),Y(NP),Z(NP),IRL);}
"Define a COMMON for scoring in AUSGAB"
REPLACE {;COMIN/SCORE/;} WITH {
  ;COMMON/SCORE/EHIST,EBIN($EBIN);
  $REAL EHIST,EBIN;}

;COMIN/BOUNDS,GEOM,MEDIA,MISC,SCORE,THRESH,USEFUL/;"Note  ; before COMIN"
"       The above expands into a series of COMMON statements"
"       BOUNDS contains ECUT and PCUT"
"       GEOM passes info to our HOWFAR routine"
"       MEDIA contains the array MEDIA"
"       MISC contains MED"
"       SCORE contains the scoring variables EHIST and EBIN"
"       THRESH contains various thresholds"
"       USEFUL contains PRM"

"---------------------------------------------------------------------"
"STEP 2 PRE-HATCH-CALL-INITIALIZATION                                 "
"---------------------------------------------------------------------"
CHARACTER*4 MEDARR(24);
DATA  MEDARR /$S'NAI',21*' '/; "place medium name in an array"
"                            $S is a MORTRAN macro to expand strings"

" Initialize the EGSnrc system "
call egs_init;

DO I=1,24[MEDIA(I,1)=MEDARR(I);]"this is to avoid a data statement for"
"                                    a variable in COMMON"
"NMED and DUNIT default to 1, i.e. one medium and we work in cm"

/MED(1),MED(3)/=0;MED(2)=1;"vacuum in regions 1 and 3, TA in region 2"

%E  "tutor3.mortran"
ECUT(2)=0.7;"   terminate electron histories at 0.7 MeV in the detector"
PCUT(2)=0.1;"   terminate   photon histories at 0.1 MeV in the detector"
"               only needed for region 2 since no transport elsewhere"
"               ECUT is total energy = 0.189   MeV kinetic energy"

%E
"---------------------------------------------------------------------"
"STEP 3   HATCH-CALL                                                  "
"---------------------------------------------------------------------"

;OUTPUT;('\f  Start tutor3'//' CALL HATCH to get cross-section data'/);
CALL HATCH;"    pick up cross section data for TA"
"               data file must be assigned to unit 12"

;OUTPUT AE(1)-PRM, AP(1);
(/' knock-on electrons can be created and any electron followed down to'
  /T40,F8.3,' MeV kinetic energy'/
' brem photons can be created and any photon followed down to      ',
  /T40,F8.3,' MeV ');
"Compton events can create electrons and photons below these cutoffs"

"---------------------------------------------------------------------"
"STEP 4  INITIALIZATION-FOR-HOWFAR and HOWNEAR                        "
"---------------------------------------------------------------------"
ZBOUND=2.54; "     plate is 2.54 cm thick"

"---------------------------------------------------------------------"
"STEP 5  INITIALIZATION-FOR-AUSGAB                                    "
"---------------------------------------------------------------------"
DO I=1,$EBIN [ EBIN(I) = 0.0;]"zero scoring array before starting"
BWIDTH = 0.2;  "energy spectrum will have 200 kev width"

"---------------------------------------------------------------------"
"STEP 6   DETERMINATION-OF-INICIDENT-PARTICLE-PARAMETERS              "
"---------------------------------------------------------------------"
"Define initial variables for 5 MeV beam of photons incident"
"perpendicular to the slab"

IQIN = 0;"                   incident charge - photons"
EIN = 5.0;"                  5 MeV kinetic energy"
/XIN,YIN,ZIN/ = 0.0;"        incident at origin"
/UIN,VIN/ = 0.0;WIN = 1.0;"  moving along Z axis"
IRIN = 2;"                   starts in region 2, could be 1"
WTIN = 1.0;"                 weight = 1 since no variance reduction"
"---------------------------------------------------------------------"
"STEP 7   SHOWER-CALL                                                 "
"---------------------------------------------------------------------"
NCASE=500000;  "INITIATE THE SHOWER NCASE TIMES"

DO I=1,NCASE [
   EHIST = 0.0; "zero energy deposited in this history"

   CALL SHOWER(IQIN,EIN,XIN,YIN,ZIN,UIN,VIN,WIN,IRIN,WTIN);

   "increment bin corresponding to  energy deposited in this history "
   IBIN= MIN(INT(EHIST/BWIDTH + 0.999), $EBIN);
   IF(IBIN ~= 0) [EBIN(IBIN)=EBIN(IBIN) + 1;]
]

"---------------------------------------------------------------------"
"STEP 8   OUTPUT-OF-RESULTS                                           "
"---------------------------------------------------------------------"
"Pick up maximum bin for normalization                                "
BINMAX=0.0; DO J = 1,$EBIN [BINMAX = MAX(BINMAX,EBIN(J));]
OUTPUT EIN,ZBOUND;
(/' Response function'/' For a',F8.2,' MeV pencil beam of',
' photons on a',F7.2,' cm thick slab of NaI'/
T6,'Energy  Counts/incident photon');

DO I=1,48 [LINE(I) = ' ';]  "blank entire output array"
DO I=1,$EBIN [
   ICOL=INT(EBIN(I)/BINMAX*48.0+0.999);
   IF(ICOL = 0) ICOL=1;
   LINE(ICOL)='*';  "load output array at desired location"
   OUTPUT BWIDTH*I,EBIN(I)/FLOAT(NCASE),LINE;
   (F10.2,F10.4,48A1);  LINE(ICOL)=' ';"reblank"
]

"-----------------------------------------------------------------"
"STEP 9   finish run                                              "
"-----------------------------------------------------------------"
call egs_finish;

STOP;END;"end of tutor3 main routine"

%E  "tutor3.mortran"
"*********************************************************************"
"                                                                     "
SUBROUTINE AUSGAB(IARG);
"                                                                     "
" In this AUSGAB routine for TUTOR3, we score the energy deposited    "
" in the detector region, region 2                                    "
"                                                                     "
"  For IARG=0, an electron or photon step is about to occur and we    "
"  score the energy deposited, if any. Note that only electrons       "
"  deposit energy during a step, and due to our geometry, electrons   "
"  only take steps in region 2 - however there is no need to check    "
"  this here.                                                         "
"  For IARG=1,2 and 4,particles have been discarded for falling below "
"  various energy cutoffs and all their energy is deposited locally   "
"  (in fact EDEP = particles kinetic energy). This only happens in    "
"  region 2.  For IARG=3, we are discarding the particle since it is  "
"  in region 1 or 3, so we do not score its energy.                   "
"                                                                     "
"  EHIST keeps track of the total energy deposited during each        "
"  history. In the main routine it is zeroed at the start of each     "
"  history and binned at the end of each history.                     "
"                                                                     "
"*********************************************************************"

COMIN/EPCONT,SCORE/; "we use EDEP from EPCONT and EHIST from SCORE    "

IF(IARG <= 2 | IARG = 4) [EHIST=EHIST + EDEP;]

RETURN;END;"end of ausgab"

%E  "tutor3.mortran"
"*********************************************************************"
"                                                                     "
SUBROUTINE HOWFAR;
"                                                                     "
"    HOWFAR for use with tutor3 (same as with TUTOR1)                 "
"*********************************************************************"
$IMPLICIT-NONE;
$REAL TVAL;
COMIN/STACK,EPCONT,GEOM/;
"       COMMON STACK contains X,Y,Z,U,V,W,IR and NP(stack pointer)"
"       COMMON EPCONT contains IRNEW, USTEP and IDISC"
"       COMMON GEOM contains ZBOUND"

IF(IR(NP) = 3) [
   IDISC=1;RETURN;"terminate this history: it is past the plate"
]
ELSEIF(IR(NP).EQ.2)["We are in the Ta plate - check the geometry"

   IF(W(NP) > 0.0)[
      "going forward - consider first since  most frequent"
      TVAL= (ZBOUND - Z(NP))/W(NP);"TVAL is dist to boundary"
      "                          in this direction"
      IF(TVAL > USTEP)[RETURN;"can take currently requested step"]
      ELSE[USTEP = TVAL; IRNEW=3; RETURN;]
   ]"END OF W(NP)>0 CASE"

   ELSEIF(W(NP) < 0.0)["going back towards origin"
      TVAL = -Z(NP)/W(NP); "distance to plane at origin"
      IF(TVAL > USTEP)[RETURN;"can take currently requested step"]
      ELSE[USTEP = TVAL; IRNEW = 1; RETURN;]
   ]"END W(NP)<0 CASE"

   ELSEIF(W(NP) = 0.0)["cannot hit boundary"RETURN;]
]"end of region 2 case"

ELSEIF(IR(NP) = 1)["in region with source"
   IF(W(NP) >  0.0)["this must be a source particle on z=0 boundary"
      USTEP=0.0;IRNEW=2;RETURN;
   ]
   ELSE[ "it must be a reflected particle-discard it"
      IDISC=1;RETURN;
   ]
]"end region 1 case"

END;"end of subroutine howfar"

%E  "tutor3.mortran"
"*********************************************************************"
"                                                                     "
SUBROUTINE HOWNEAR(tperp, x, y, z, irl);
"                                                                     "
" The following is a general specification of HOWNEAR                 "
"   Given a particle at (x,y,z) in region irl, HOWNEAR answers the    "
"   question, What is the distance to the closest boundary?           "
"                                                                     "
"  In general this can be a complex subroutine.                       "
"  Note that this subroutine must be linked to $CALL-HOWNEAR(#)       "
"                                                                     "
"  By simply setting HOWNEAR = 0.0 one gets a single scattering run   "
"                                                                     "
"*********************************************************************"
$IMPLICIT-NONE;
$REAL tperp, x,y,z;
$INTEGER irl;

;COMIN/GEOM/;
"       COMMON GEOM contains ZBOUND"

IF(irl = 3) [OUTPUT;('Called HOWNEAR in region 3'); RETURN;]

ELSEIF(irl = 2)["We are in the Ta plate - check the geometry"
    tperp = min(z, (ZBOUND - z) );
]
ELSEIF(irl = 1)[OUTPUT;('Called HOWNEAR in region 1'); RETURN;]

END;"end of subroutine hownear"
"============================end of tutor3.mortran================="
