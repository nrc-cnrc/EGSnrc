#! /bin/sh
###############################################################################
#
#  EGSnrc script to finalize the installation of BEAMnrc for a single user
#  Copyright (C) 2015 National Research Council Canada
#
#  This file is part of EGSnrc.
#
#  EGSnrc is free software: you can redistribute it and/or modify it under
#  the terms of the GNU Affero General Public License as published by the
#  Free Software Foundation, either version 3 of the License, or (at your
#  option) any later version.
#
#  EGSnrc is distributed in the hope that it will be useful, but WITHOUT ANY
#  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
#  FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for
#  more details.
#
#  You should have received a copy of the GNU Affero General Public License
#  along with EGSnrc. If not, see <http://www.gnu.org/licenses/>.
#
###############################################################################
#
#  Author:          Blake Walters, 2004
#
#  Contributors:
#
###############################################################################
#
#  Short portions of this script are derived from configure scripts generated
#  by GNU autoconf (http://www.gnu.org/software/autoconf/).
#
#  Finalizes the installation of BEAMnrc for the user executing the script.
#  Output is stored in scripts/finalize_beam_$USER.log
#
#  1. Checks that the EGSnrcMP and OMEGA/BEAM systems have been installed
#     correctly.
#
#  2. Makes directory chain beamnrc/spec_modules in $EGS_HOME and copies
#     example accelerator .module files into the spec_modules directory.
#
#  3. Makes directory dosxyznrc in $EGS_HOME, copies codes from
#     $HEN_HOUSE/user_codes/dosxyznrc into this and then compiles DOSXYZnrc
#     for the user.
#
###############################################################################


# my version
my_version='1.0'

# my name
my_name=`echo "$0" |sed 's,.*[\\/],,'`

# a timestamp
timestamp='Mar 18 2002'

# echo stuff (from autoconf generated scripts)
case `echo "testing\c"; echo 1,2,3`,`echo -n tesssss; echo 1,2,3` in
  *c*,-n*) ECHO_N= ECHO_C='
' ECHO_T='    ' ;;
  *c*,*  ) ECHO_N=-n ECHO_C= ECHO_T= ;;
  *)       ECHO_N= ECHO_C='\c' ECHO_T= ;;
esac

test_egs_home=
if test ! -d $HOME/egsnrc; then
  test_egs_home=$HOME/egsnrc
fi

exec 3>finalize_beam_$USER.log
cat >&3 <<EOF
*****************************************************************************
BEAMnrc configuration for the user $USER
Generated by $my_name version $my_version $timestamp
*****************************************************************************

EOF
cat >&2 <<EOF
*****************************************************************************
BEAMnrc configuration for the user $USER
Generated by $my_name version $my_version $timestamp
*****************************************************************************

EOF

#find out if HEN_HOUSE, EGS_HOME and EGS_CONFIG have already been defined
#AND exist.  If not, the user must have not installed properly or installation
#is incomplete
egs_installed=yes
if test ! -d "$HEN_HOUSE"; then
  echo "HEN_HOUSE is not defined." >&3
  echo "HEN_HOUSE is not defined." >&2
  egs_installed=no
fi
if test ! -d "$EGS_HOME"; then
  echo "EGS_HOME is not defined." >&3
  echo "EGS_HOME is not defined." >&2
  egs_installed=no
fi
if test ! -f "$EGS_CONFIG"; then
  echo "EGS_CONFIG is not defined." >&3
  echo "EGS_CONFIG is not defined." >&2
  egs_installed=no
fi

if test "x$egs_installed" = xno; then
  echo "BEAMnrc configuration will quit because EGSnrcMP is not installed" >&3
  echo "BEAMnrc configuration will quit because EGSnrcMP is not installed" >&2
  echo "properly.  Check your EGSnrcMP installation and try again." >&3
  echo "properly.  Check your EGSnrcMP installation and try again." >&2
  exit 1
else
my_machine=`cat $EGS_CONFIG | grep "my_machine =" | sed 's/my_machine = //'`
fi

echo >&2
echo >&3
echo "EGSnrcMP was correctly installed with:" >&3
echo "    HEN_HOUSE=$HEN_HOUSE" >&3
echo "    EGS_HOME=$EGS_HOME" >&3
echo "    EGS_CONFIGURE=$EGS_CONFIGURE" >&3
echo "EGSnrcMP was correctly installed with:" >&2
echo "    HEN_HOUSE=$HEN_HOUSE" >&2
echo "    EGS_HOME=$EGS_HOME" >&2
echo "    EGS_CONFIG=$EGS_CONFIG" >&2
echo >&2
echo >&3

#now, check that OMEGA/BEAM has been installed on the system
beam_installed=yes
if test ! -d "${HEN_HOUSE}omega"; then
  echo "${HEN_HOUSE}omega does not exist." >&3
  echo "${HEN_HOUSE}omega is not defined." >&2
  beam_installed=no
fi

if test "x$beam_installed" = xno; then
  echo "BEAMnrc configuration will quit because OMEGA/BEAM is not installed" >&3
  echo "BEAMnrc configuration will quit because OMEGA/BEAM is not installed" >&2
  echo "properly.  Check your OMEGA/BEAM installation and try again." >&3
  echo "properly.  Check your OMEGA/BEAM installation and try again." >&2
  exit 1
fi

echo >&2
echo >&3
echo "OMEGA/BEAM was installed" >&3
echo "OMEGA_HOME will be ${HEN_HOUSE}omega" >&3
echo "OMEGA/BEAM was installed" >&2
echo "OMEGA_HOME will be ${HEN_HOUSE}omega" >&2
echo >&2
echo >&3

OMEGA_HOME=${HEN_HOUSE}omega
export OMEGA_HOME

make_prog=`cat $EGS_CONFIG | grep "make_prog = " | sed "s/make_prog = //g"`
if test "x$make_prog" = x; then
    echo "make_prog is not set in your config file? " >&2
    echo "make_prog is not set in your config file? " >&3
    echo "will try to use make " >&2
    echo "will try to use make " >&3
    make_prog=make
fi

install_complete=yes

#create the directories $EGS_HOME/beamnrc and $EGS_HOME/beamnrc/spec_modules
if cd "$EGS_HOME"; then
    echo >&3
    echo "Now in $EGS_HOME " >&3
    echo $ECHO_N "Making directory ${EGS_HOME}beamnrc ... $ECHO_C" >&2
    echo $ECHO_N "Making directory ${EGS_HOME}beamnrc ... $ECHO_C" >&3
    if test -d beamnrc || { mkdir beamnrc 2>&3; mystatus=$?; (exit $mystatus); }; then
       echo "OK" >&2; echo "OK" >&3
       if cd "beamnrc"; then
          echo "Now in ${EGS_HOME}beamnrc " >&3
          echo $ECHO_N "Making directory ${EGS_HOME}beamnrc/spec_modules ... $ECHO_C" >&2
          echo $ECHO_N "Making directory ${EGS_HOME}beamnrc/spec_modules ... $ECHO_C" >&3
          if test -d spec_modules || { mkdir spec_modules 2>&3; mystatus=$?; (exit $mystatus); }; then
              echo "OK" >&2; echo "OK" >&3
              if cd "spec_modules"; then
                echo >&3
                echo "Now in ${EGS_HOME}beamnrc/spec_modules " >&3
 echo "Copying example .module files to ${EGS_HOME}beamnrc/spec_modules ... $ECHO_C" >&2
                failed_files=
                for file in BEAMnrc_examples/EX10MeVe/EX10MeVe.module \
                         BEAMnrc_examples/EX16MVp/EX16MVp.module \
                         BEAMnrc_examples/EXphantom/EXphantom.module \
                         BEAMnrc_examples/EXslabs/EXslabs.module; do
                    file=$OMEGA_HOME/beamnrc/$file
                    echo "Copying $file ... $ECHO_C" >&3
                    if { cp $file . 2>&3; mystatus=$?; (exit $mystatus); }; then
                       echo "OK" >&3
                    else
                       failed_files="$failed_files $file"
                       echo "Failed" >&3
                       install_complete=no
                    fi
                done
                if test ! "x$failed_files" = x; then
                    echo "Failed to copy the following files: " >&2
                    echo "  $failed_files" >&2
                fi
              else
                echo "Failed" >&3
                echo "Failed" >&2
                install_complete=no
              fi
          else
              echo "Failed" >&3
              echo "Failed" >&2
              install_complete=no
          fi
       else
          echo "Failed" >&3
          echo "Failed" >&2
          install_complete=no
       fi
    else
       echo "Failed" >&2
       echo "Failed" >&3
       install_complete=no
    fi
# now compile dosxyznrc
    echo >&3
    if cd "$EGS_HOME"; then
      echo "Now in $EGS_HOME " >&3
      #
      # Now create dosxyznrc_my_machine.spec if not there. This is possible after
      # checking out the HEN_HOUSE.
      #
      if test ! -f "${HEN_HOUSE}specs/dosxyznrc_${my_machine}.spec"; then
         echo "Creating DOSXYZnrc configuration file dosxyznrc_${my_machine}.spec ..." >&2
         echo "Creating DOSXYZnrc configuration file dosxyznrc_${my_machine}.spec ..." >&3
         echo 'PARDOSE_OBJECTS = $(EGS_LIBDIR)read_write_pardose.o $(EGS_LIBDIR)load_vculib.o' > ${HEN_HOUSE}specs/dosxyznrc_${my_machine}.spec
         echo "OK" >&2; echo "OK" >&3
      fi
      echo $ECHO_N "Making directory ${EGS_HOME}dosxyznrc ... $ECHO_C" >&2
      echo $ECHO_N "Making directory ${EGS_HOME}dosxyznrc ... $ECHO_C" >&3
      if test -d dosxyznrc || { mkdir dosxyznrc 2>&3; mystatus=$?; (exit $mystatus); }; then
       echo "OK" >&2; echo "OK" >&3
       if cd "dosxyznrc"; then
          echo >&3
          echo "Copying DOSXYZnrc files to ${EGS_HOME}dosxyznrc ... $ECHO_C" >&2
          echo "Now in ${EGS_HOME}dosxyznrc " >&3
          failed_files=
          for file in dosxyznrc.mortran Makefile dosxyznrc.make dosxyznrc.io srcxyznrc.mortran srcxyznrc.macros dosxyznrc_user_macros.mortran; do
            the_file=${HEN_HOUSE}user_codes/dosxyznrc/$file
            echo "Copying $the_file ... $ECHO_C" >&3
            if { cp $the_file . 2>&3; mystatus=$?; (exit $mystatus); }; then
               echo "OK" >&3
            else
               failed_files="$failed_files $file"
               echo "Failed" >&3
               copyfail=yes
               install_complete=no
            fi
          done
          if test "x$failed_files" = x; then
            echo "OK" >&2
          else
            echo "Failed" >&2
            echo "Failed to copy the following files: " >&2
            echo "  $failed_files" >&2
          fi
          if test x$copyfail != xyes; then
            #compile dosxyznrc
            echo $ECHO_N "Compiling dosxyznrc ... $ECHO_C" >&2
            echo $ECHO_N "Compiling dosxyznrc ... $ECHO_C" >&3
            if { $make_prog >&3 2>&3; mystatus=$?; (exit $mystatus); }; then
               echo "OK" >&2; echo "OK" >&3
            else
               echo "Failed" >&2
               echo "Failed" >&3
               install_complete=no
            fi
          else
            echo "Files are missing. Will not compile dosxyznrc." >&2
            echo "Files are missing. Will not compile dosxyznrc." >&3
          fi
       else
          echo "Failed" >&3
          echo "Failed" >&2
          install_complete=no
       fi
      else
       echo "Failed" >&2
       echo "Failed" >&3
       install_complete=no
      fi
    else
      echo "Failed to change directory to $EGS_HOME" >&2
      echo "Failed to change directory to $EGS_HOME" >&3
      install_complete=no
    fi
else
    echo "Failed to change directory to $EGS_HOME" >&2
    echo "Failed to change directory to $EGS_HOME" >&3
    install_complete=no
fi

# now tell the user what they have to do before running BEAMnrc
# also, let them no if any parts of the installation did not work
if test "x$install_complete" = xno; then
     cat >&2 <<_ACEOF

******************************************************************************

WARNING: Some parts of the OMEGA/BEAM installation failed.
         Look in the install.status file to see what these were.
         Once you have found and fixed the problem, either run the failed
         commands individually or re-run this installation script.

******************************************************************************
_ACEOF
     cat >&3 <<_ACEOF

******************************************************************************

WARNING: Some parts of the OMEGA/BEAM installation failed.
         Look in the install.status file to see what these were.
         Once you have found and fixed the problem, either run the failed
         commands individually or re-run this installation script.

******************************************************************************
_ACEOF
fi
if test -f ${HEN_HOUSE}scripts/beamnrc_cshrc_additions -a \
   -f ${HEN_HOUSE}scripts/beamnrc_bashrc_additions; then
   cat >&2 <<_ACEOF

******************************************************************************

The OMEGA/BEAM installation is finished.

If you are running from a C-shell, add the following statement to the
end of your $HOME/.cshrc file:

source ${HEN_HOUSE}scripts/beamnrc_cshrc_additions

If you are running from a Bourne shell, add the following statement to the
end of your $HOME/.bashrc file:

source ${HEN_HOUSE}scripts/beamnrc_bashrc_additions

This will specify OMEGA_HOME and set useful aliases.

******************************************************************************
_ACEOF
   cat >&3 <<_ACEOF

******************************************************************************

The OMEGA/BEAM installation is finished.

If you are running from a C-shell, add the following statement to the
end of your $HOME/.cshrc file:

source ${HEN_HOUSE}scripts/beamnrc_cshrc_additions

If you are running from a Bourne shell, add the following statement to the
end of your $HOME/.bashrc file:

source ${HEN_HOUSE}scripts/beamnrc_bashrc_additions

This will specify OMEGA_HOME and set useful aliases.

******************************************************************************
_ACEOF
else
   cat >&2 <<_ACEOF

******************************************************************************

The BEAMnrc installation is finished.

Scripts:
${HEN_HOUSE}scripts/beamnrc_cshrc_additions and
${HEN_HOUSE}scripts/beamnrc_bashrc_additions
cannot be found.  Under normal completion, you would be asked to
source one of them in your .cshrc (or .bashrc) file to define
OMEGA_HOME and useful aliases.  Check to find out what went
wrong!

******************************************************************************
_ACEOF
   cat >&3 <<_ACEOF

******************************************************************************

The BEAMnrc installation is finished.

Scripts:
${HEN_HOUSE}scripts/beamnrc_cshrc_additions and
${HEN_HOUSE}scripts/beamnrc_bashrc_additions
cannot be found.  Under normal completion, you would be asked to
source one of them in your .cshrc (or .bashrc) file to define
OMEGA_HOME and useful aliases.  Check to find out what went
wrong!

******************************************************************************
_ACEOF
fi

exit 0
